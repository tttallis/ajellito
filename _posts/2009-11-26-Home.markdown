---
title: Simple, web-based Agile / Scrum project management tool built in Django
name: Home
layout: default
category: navigation
---
Ajellito aims to do **just enough** for you to effectively and
efficiently manage projects using an Agile methodology.
![image](media/agilito-interation-overview-sm.jpg)

## Development halted

Ajellito/Agilito has turned into a one-man project, and that leaves to
little opportunity for load-sharing and feedback. I have shifted all
my efforts to [Redmine Backlogs 2.1](http://github.com/relaxdiego/redmine_backlogs/tree/2.1). 
I have included a tool in the ajellito sources (toyaml.py) that will
allow you to dump your projects in a format that can be imported
cleanly into Redmine Backlogs. Redmine provides a richer base for what
Ajellito/Agilito set to achieve; in a mere two weeks I've replicated
everything that was in Ajellito/Agilito in Redmine, and gained all
that redmine has to offer in the process, so as far as I'm concerned
this move is final. I'll keep this repository up for those still
interested in its source.

# Ajellito Features Summary

Ajellito allows you to track iterations, user stories, tasks, test
cases, test results in a simple, easy to use agile project
management tool. There are 5 main screens to easily manage your
project:

-   Easy to read summary screens on Iteration status, showing
    burndown chart and state of each user story
-   Find the running total of logged hours versus estimates for an
    iteration
-   Summary screen to find and manage all information related to a
    user story
-   Log your hours against tasks and easily update the state of
    task also
-   Backlog screen for storing and refining requirements
    (unscheduled work)

Ajellito uses the Django administration screen to:

-   Add users and assign them permissions to projects
-   Add projects
-   Add iterations

In Agilto's UI:

-   Add/edit/delete user stories
-   Add/edit/delete tasks on user stories
-   Add/delete attachments on user stories
-   Add/edit/delete test cases on user stories
-   Add/edit/delete test results on test cases
-   Export task logs to csv

This product is relatively new, and while I can appreciate why you
might want to fork code to your own repository (GitHub makes this very
easy), I would prefer it if patches were submitted upstream to this code base to help
avoid fragmenting the product into multiple unfinished projects. Of
course, the code is open source and you're free to fork it if you wish - however it'd be nice to have a central repository that is as
advanced and complete as possible.

For more information, see this [essay](http://www.pointy-stick.com/blog/2009/03/16/dark-side-distributed-version-control/) by Malcolm Tredinnick. If you
have any comments, please email them to me at friflaj@ajellito.com. Thanks for understanding. 

